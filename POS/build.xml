<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." name="POS" default="build">

	<property name="build.dir"			value="${basedir}/build"/>
	<property name="build.classes.dir"	value="${build.dir}/classes"/>
	<property name="build.jar.dir"		value="${build.dir}/jar"/>
	<property name="src.dir"			value="${basedir}/src"/>
	<property name="lib.dir"			value="${basedir}/lib"/>
	<property name="etc.dir"			value="${basedir}/etc"/>
	<property name="conf.dir"			value="${basedir}/conf"/>

	<!-- database variables -->
	<property name="data.dir"			value="${basedir}/data"/>
	<property name="db.file"			value="${data.dir}/POSdb"/>
	<property name="db.alias"			value="POS"/>
	<property name="db.url" 			value="jdbc:hsqldb:hsql://localhost/POS"/>
	<property name="lib.hibernate.dir"	value="${lib.dir}/hibernate"/>

	<propertyfile file="application.properties">
		<entry key="main.class"			default="ee.ut.math.tvt.includeName.Intro" />
		<entry key="jar.name"			default="includeName.jar" />
	</propertyfile>
	<replaceregexp file="application.properties" match="^#.*?\n" replace="" byline="false" />

	<property file="application.properties"/>

	<path id="run.classpath">
		<pathelement location="${basedir}"/>
		<pathelement location="${build.classes.dir}"/>
		<pathelement location="${etc.dir}"/>
		<pathelement location="${conf.dir}"/>

		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>

		<fileset dir="${lib.hibernate.dir}">
             <include name="*.jar"/>
        </fileset>
	</path>

	<target name="run" depends="build" description="Run the application">
		<java classname="${main.class}" classpathref="run.classpath" fork="yes">
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
		</java>
	</target>

	<target name="build" description="Compile the source">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes.dir}"/>

		<!-- Compile -->
		<javac
			srcdir="${src.dir}"
			destdir="${build.classes.dir}"
			debug="true"
			debuglevel="lines,vars,source"
			encoding="utf-8"
			compiler="modern"
			target="1.7"
			source="1.7"
			includeantruntime="false">
			<classpath refid="run.classpath"/>
		</javac>
	</target>

	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}"/>
	</target>

	<target name="dist" depends="build" description="Compile the project .jar file">
		<mkdir dir="${build.jar.dir}"/>

		<!-- Update revision number and write build number to version.properties -->
		<propertyfile file="version.properties">
			<entry key="build.revision.number" type="int" value="1" operation="+" pattern="000" />
			<entry key="build.minor.number" type="int" value="0" pattern="00" />
			<entry key="build.major.number" type="int" value="0" pattern="0" />
		</propertyfile>
		<property file="version.properties"/>
		<propertyfile file="version.properties">
			<entry key="build.number" value="${build.major.number}.${build.minor.number}.${build.revision.number}"/>
		</propertyfile>
		<replaceregexp file="application.properties" match="^#.*?\n" replace="" byline="false" />

		<!-- Build the jar file -->
		<jar destfile="${build.jar.dir}/${jar.name}" basedir="${build.classes.dir}">
			<fileset dir="${basedir}">
				<include name="*.properties" />
				<include name="etc/*" />
			</fileset>

			<zipgroupfileset dir="${lib.dir}" includes="*.jar" />
			<zipgroupfileset dir="${lib.hibernate.dir}" includes="*.jar" />
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
				<attribute name="Class-Path" value=". etc/"/>
			</manifest>
		</jar>
	</target>

	<target name="jrun" depends="dist" description="Run the compiled .jar file">
		<java jar="${build.jar.dir}/${jar.name}" fork="true"/>
	</target>

	<!-- How to set up automatic authentication: https://www.kernel.org/pub/software/scm/git/docs/git-credential-store.html -->
	<target name="git_commit" description="Commit changes to Git">
		<input message="Commit message" addproperty="commit.message" />
		<echo message="Commiting all changes with message ${commit.message}" />
		<exec executable="git" dir="${basedir}" failifexecutionfails="false" errorproperty="">
			<arg value="add" />
			<arg value="-A" />
		</exec>
		<exec executable="git" dir="${basedir}" failifexecutionfails="false" errorproperty="">
			<arg value="commit" />
			<arg value="-m" />
			<arg value="${commit.message}" />
		</exec>
		<exec executable="git" dir="${basedir}" failifexecutionfails="false" errorproperty="">
			<arg value="push" />
		</exec>
	</target>

	<target name="git_tag" description="Tag homework">
		<input message="Homework number:" addproperty="tag.number" />
		<condition property="tag.is.integer">
			<matches pattern="^[1-9]+$" string="${tag.number}" />
		</condition>
		<fail message="Your input is incorrect" unless="tag.is.integer" />
		<echo message="Tagging Homework ${tag.number}" />
		<exec executable="git" dir="${basedir}" failifexecutionfails="false" errorproperty="">
			<arg value="tag" />
			<arg value="-a" />
			<arg value="homework_${tag.number}" />
			<arg value="-m" />
			<arg value="Homework ${tag.number}" />
		</exec>
		<exec executable="git" dir="${basedir}" failifexecutionfails="false" errorproperty="">
			<arg value="push" />
			<arg value="--tags" />
		</exec>
	</target>

	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.includeName.Intro" fork="true" classpathref="run.classpath">
			<arg value="console" />
		</java>
	</target>

	<target name="dbmanager" description="Start the HSQLDB manager">
		<java
			classname="org.hsqldb.util.DatabaseManagerSwing"
			classpathref="run.classpath"
			fork="yes"
			spawn="true">
			<arg line="--user sa --url ${db.url}" />
        </java>
	</target>

    <target name="startdb" description="Start the HSQLDB with the default params">
		<java
			classname="org.hsqldb.Server"
			classpathref="run.classpath"
			fork="yes">
			<arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" /> 
		</java>
	</target>
</project>

