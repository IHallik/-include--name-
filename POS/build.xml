<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<!--
<project basedir="." default="build" name="POS">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="POS.classpath">
        <pathelement location="bin"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="POS.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
</project>-->
<project basedir="." name="POS" default="build">

	<property file="build.properties"/>
	<property name="build.dir" value="${basedir}/build"/>
	<property name="build.classes.dir" value="${build.dir}/classes"/>
	<property name="build.jar.dir" value="${build.dir}/jar"/>
	<property name="src.dir" value="${basedir}/src"/>
	<property name="dist.dir" value="${basedir}/dist"/>
	<property name="conf.dir" value="${basedir}/etc"/>
	<property name="doc.dir" value="${build.dir}/doc"/>
	<property name="test.reports.dir" value="${build.dir}/reports/"/>
	<property name="main.class" value="ee.ut.math.tvt.includeName.Intro"/>
	<property name="jar.name" value="includeName.jar"/>

	<path id="jrun.classpath">
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
	</path>

	<path id="run.classpath">
		<pathelement location="${build.classes.dir}"/>
		<pathelement location="${conf.dir}"/>
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
	</path>

	<target name="run" depends="build" description="Run the application">
		<java classname="${main.class}" classpathref="run.classpath" fork="yes" />
	</target>

	<target name="build" description="Compile the source">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes.dir}"/>

		<!-- Compile -->
		<javac
            srcdir="${src.dir}"
            destdir="${build.classes.dir}"
            debug="true"
            debuglevel="lines,vars,source"
            encoding="utf-8"
            compiler="modern"
            target="1.7"
            source="1.7"
			includeantruntime="false">
			<classpath refid="run.classpath"/>
		</javac>
	</target>

	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}"/>
	</target>

	<target name="dist" depends="build" description="Compile the project .jar file">
		<mkdir dir="${build.jar.dir}"/>

		<!-- Update revision number and write build number to version.properties -->
		<propertyfile file="version.properties">
			<entry key="build.revision.number" type="int" value="1" operation="+" pattern="000" />
			<entry key="build.minor.number" type="int" value="0" pattern="00" />
			<entry key="build.major.number" type="int" value="0" pattern="0" />
		</propertyfile>
		<property file="version.properties"/>
		<propertyfile file="version.properties">
			<entry key="build.number" value="${build.major.number}.${build.minor.number}.${build.revision.number}"/>
		</propertyfile>

		<!-- Build the jar file -->
		<jar destfile="${build.jar.dir}/${jar.name}" basedir="${build.classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
			</manifest>
		</jar>
	</target>

	<target name="jrun" depends="dist" description="Run the compiled .jar file">
		<java jar="${build.jar.dir}/${jar.name}" classpathref="jrun.classpath" fork="true"/>
	</target>

</project>

